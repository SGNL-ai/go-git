load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@bazel_gazelle//:def.bzl", "gazelle")

# gazelle:prefix github.com/sgnl-ai/go-git
# gazelle:proto disable_global

gazelle(
    name = "gazelle",
    command = "update",
)

gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_dependencies",
        "-prune",
        "-build_file_proto_mode=disable_global",
    ],
    command = "update-repos",
)

go_library(
    name = "go-git",
    srcs = [
        "blame.go",
        "common.go",
        "doc.go",
        "object_walker.go",
        "options.go",
        "prune.go",
        "references.go",
        "remote.go",
        "repository.go",
        "status.go",
        "submodule.go",
        "worktree.go",
        "worktree_bsd.go",
        "worktree_commit.go",
        "worktree_js.go",
        "worktree_linux.go",
        "worktree_plan9.go",
        "worktree_status.go",
        "worktree_unix_other.go",
        "worktree_windows.go",
    ],
    importpath = "github.com/sgnl-ai/go-git",
    visibility = ["//visibility:public"],
    deps = [
        "//config",
        "//internal/revision",
        "//internal/url",
        "//plumbing",
        "//plumbing/cache",
        "//plumbing/filemode",
        "//plumbing/format/config",
        "//plumbing/format/gitignore",
        "//plumbing/format/index",
        "//plumbing/format/packfile",
        "//plumbing/hash",
        "//plumbing/object",
        "//plumbing/protocol/packp",
        "//plumbing/protocol/packp/capability",
        "//plumbing/protocol/packp/sideband",
        "//plumbing/revlist",
        "//plumbing/storer",
        "//plumbing/transport",
        "//plumbing/transport/client",
        "//storage",
        "//storage/filesystem",
        "//storage/filesystem/dotgit",
        "//storage/memory",
        "//utils/diff",
        "//utils/ioutil",
        "//utils/merkletrie",
        "//utils/merkletrie/filesystem",
        "//utils/merkletrie/index",
        "//utils/merkletrie/noder",
        "//utils/sync",
        "@cat_dario_mergo//:go_default_library",
        "@com_github_go_git_go_billy_v5//:go_default_library",
        "@com_github_go_git_go_billy_v5//osfs:go_default_library",
        "@com_github_go_git_go_billy_v5//util:go_default_library",
        "@com_github_sergi_go_diff//diffmatchpatch:go_default_library",
    ],
)

go_test(
    name = "go-git_test",
    srcs = [
        "blame_test.go",
        "common_test.go",
        "example_test.go",
        "options_test.go",
        "prune_test.go",
        "references_test.go",
        "remote_test.go",
        "repository_plan9_test.go",
        "repository_test.go",
        "repository_unix_test.go",
        "repository_windows_test.go",
        "submodule_test.go",
        "worktree_commit_test.go",
        "worktree_test.go",
    ],
    embed = [":go-git"],
    deps = [
        "//config",
        "//plumbing",
        "//plumbing/cache",
        "//plumbing/filemode",
        "//plumbing/format/gitignore",
        "//plumbing/format/index",
        "//plumbing/format/packfile",
        "//plumbing/object",
        "//plumbing/protocol/packp",
        "//plumbing/protocol/packp/capability",
        "//plumbing/storer",
        "//plumbing/transport",
        "//plumbing/transport/http",
        "//storage",
        "//storage/filesystem",
        "//storage/memory",
        "@com_github_go_git_go_billy_v5//:go_default_library",
        "@com_github_go_git_go_billy_v5//memfs:go_default_library",
        "@com_github_go_git_go_billy_v5//osfs:go_default_library",
        "@com_github_go_git_go_billy_v5//util:go_default_library",
        "@com_github_go_git_go_git_fixtures_v4//:go_default_library",
        "@in_gopkg_check_v1//:go_default_library",
        "@org_golang_x_text//unicode/norm:go_default_library",
    ],
)
